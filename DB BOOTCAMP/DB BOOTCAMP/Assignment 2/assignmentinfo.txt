Complete the User story:

There should be a way to track guests- their names, notes about them, birthdays, cakedays, and status - which can be any kind. -- Done
Such as sick, fine, hangry, raging, placid. The guests should have classes and should have levels related to them. Ex. lvl 2 mage, lvl 3 fighter. ((linking table)). -- Done

Also I no longer want to track rats.-- Done

Finish up our Schema with missing information - We need to link Supplies and have them be used in sales. -- done 

Create a Supply Sales table to give us a way to make use of received supplies. 
(You can alternatively create a ServiceSupplies table or even a SaleSupplies table and make use of the supplies in Services that Taverns
sell) 

Add Foreign Keys and Primary Keys to our tables. 

Take care when creating the primary keys for the many-to-many relationshipsInstead of Adding Foreign Keys and
Primary keys to a table on creation, Use an Alter Table command to modify the table to add them to the Tavern table and the User TableShow that there are constraints
by making insertions or queries that will fail due to foreign key constraints (you can comment these out so that your script still runs) 


ASSIGNMENT 3 //////////////////////////////////////////////////////////////////////////

The system should also be able to track Rooms. Rooms should have a status and an associated tavern. There should be a way to track Room Stays which will contain a sale, guest, 
room, the date it was stayed in and the rate
- Room Stays

Write a query that returns guests with a birthday before 2000. Write a query to return rooms that cost more than 100 gold a night

Write a query that returns UNIQUE guest names. Write a query that returns all guests ordered by name (ascending) Use ASC or DESC after your ORDER BY [col]

Write a query that returns the top 10 highest price salesWrite a query to return all the values stored in all Lookup Tables - Lookup tables are the tables we reference typically 
with just an ID and a name. This should be a dynamic combining of all of the tables

Write a query that returns Guest Classes with Levels and Generate a new column with a label for their level grouping (lvl 1-10, 10-20, etc)

Write a series of INSERT commands that will insert the statuses of one table into another of your choosing using SELECT statements 
(See our lab in class - The INSERT commands should be generated). It’s ok if the data doesn’t match or make sense! :)

Remember, INSERT Commands look like: INSERT INTO Table1 
(column1, column2) VALUES (column1, column2)
Ex. INSERT INTO ROLES (Name) VALUES (Active)
      INSERT INTO ROLES (Name) VALUES (Inactive)
